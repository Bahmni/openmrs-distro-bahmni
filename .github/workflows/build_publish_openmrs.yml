name: Build and Publish OpenMRS
on:
  push:
    branches: 
      - master
      - 'release-*'
      - BAH-2308
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - "**.md"

  repository_dispatch:
    types: ["default-config-trigger", "bahmni-embedded-tomcat-trigger"]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: |
          ./mvnw --no-transfer-progress -U clean install
      - name: Renaming the Artifact
        run: cp distro/target/distro*.zip distro/target/distro.zip
      - uses: actions/upload-artifact@v3
        with:
          name: distro.zip
          path: distro/target/distro.zip

  docker-build-publish:
    name: Docker Build Publish
    runs-on: ubuntu-latest
    needs: [ build ]
    env:
      HELM_CHART_PATH: package/helm/openmrs
    steps:
      - uses: actions/checkout@v2
      - name: Set artifact version
        run: |
          wget -q https://raw.githubusercontent.com/Bahmni/bahmni-infra-utils/main/setArtifactVersion.sh && chmod +x setArtifactVersion.sh
          ./setArtifactVersion.sh
          rm setArtifactVersion.sh
      - uses: actions/download-artifact@v3
        with:
          name: distro.zip
          path: distro/target
      - name: Extracting distro.zip
        run: |
          unzip -d distro/target/ distro/target/distro.zip
          mv distro/target/distro*/ distro/target/distro/
      - name: Download default_config.zip
        run: sh .github/download_artifact.sh default-config default_config ${{secrets.BAHMNI_PAT}}
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Docker Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: package/docker/openmrs/Dockerfile
          push: true
          tags: bahmni/openmrs:${{ env.ARTIFACT_VERSION }},bahmni/openmrs:latest
      - name: Update Version and Image Tag
        run: |
          yq --inplace '.image.tag = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/values.yaml
          yq --inplace '.version = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/Chart.yaml

      - name: Helm Lint
        run: helm lint $HELM_CHART_PATH

      - name: Helm Package
        run: helm package $HELM_CHART_PATH

      - name: Checkout Charts Repository
        uses: actions/checkout@v2
        with:
          repository: Bahmni/helm-charts
          ref: gh-pages
          path: helm-charts
          persist-credentials: false

      - name: Copy Helm Archive
        run: cp openmrs-${{ env.ARTIFACT_VERSION }}.tgz helm-charts/openmrs/

      - name: Helm Index
        working-directory: helm-charts/
        run: helm repo index --merge index.yaml --url https://bahmni.github.io/helm-charts/  .

      - name: Commit and Push Chart Repository
        working-directory: helm-charts/
        run: |
          git config user.name ${{ secrets.BAHMNI_USERNAME}}
          git config user.email ${{ secrets.BAHMNI_EMAIL}}
          git add .
          git commit -m "Release of openmrs-${{ env.ARTIFACT_VERSION }}"
          git push 'https://${{ secrets.BAHMNI_USERNAME}}:${{ secrets.BAHMNI_PAT}}@github.com/bahmni/helm-charts.git' gh-pages

  rpm-build-publish:
    name: RPM Build and Publish
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - name: Set artifact version
        run: |
          wget -q https://raw.githubusercontent.com/Bahmni/bahmni-infra-utils/main/setArtifactVersion.sh && chmod +x setArtifactVersion.sh
          ./setArtifactVersion.sh
          rm setArtifactVersion.sh
      - uses: actions/download-artifact@v3
        with:
          name: distro.zip
          path: package/rpm/bahmni-emr/resources
      - name: Extracting distro.zip
        run: |
          unzip -d distro/target/ package/rpm/bahmni-emr/resources/distro.zip
          cp distro/target/distro*/openelis-atomfeed-client-*.omod package/rpm/bahmni-lab-connect/resources/
      - name: Download bahmni-embedded-tomcat.zip
        run: sh .github/download_artifact.sh bahmni-package bahmni-embedded-tomcat ${{secrets.BAHMNI_PAT}}
      - name: Download openmrs_backup.sql.gz file from emr-functional-tests/dbdump
        run:  |
              wget https://raw.githubusercontent.com/Bahmni/emr-functional-tests/master/dbdump/openmrs_backup.sql.gz
              gunzip -c openmrs_backup.sql.gz > package/rpm/bahmni-emr/resources/openmrs_demo_dump.sql
      - name: Setup Java 8 for Gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'
      - name: Gradle Build
        run: |
            cd package/rpm
            export version=$(awk -F- '{print $1}' <<< ${{env.ARTIFACT_VERSION}})
            export release=$(awk -F- '{print $2}' <<< ${{env.ARTIFACT_VERSION}})
            ./gradlew -Pversion=$version -Prelease=$release :bahmni-emr:clean :bahmni-emr:buildRpm :bahmni-lab-connect:clean :bahmni-lab-connect:buildRpm
      - uses: actions/upload-artifact@v3
        with:
          name: bahmni-emr-rpm
          path: package/rpm/bahmni-emr/build/distributions/*.rpm
      - uses: actions/upload-artifact@v3
        with:
          name: bahmni-lab-connect-rpm
          path: package/rpm/bahmni-lab-connect/build/distributions/*.rpm
