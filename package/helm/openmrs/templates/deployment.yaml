apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    environment: {{ .Values.metadata.labels.environment }}

spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      environment: {{ .Values.metadata.labels.environment }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        environment: {{ .Values.metadata.labels.environment }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DB_AUTO_UPDATE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: dbAutoUpdate
            - name: DB_CREATE_TABLES
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: dbCreateTables
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: dbName
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: debug
            - name: MODULE_WEB_ADMIN
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: moduleWebAdmin
            - name: OPENELIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: openELISHost
            - name: OPENELIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Chart.Name }}-config
                  key: openELISPort
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secrets
                  key: dbHost
                  optional: false
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secrets
                  key: dbPassword
                  optional: false
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secrets
                  key: dbUsername
                  optional: false
            - name: OPENELIS_ATOMFEED_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secrets
                  key: openELISAtomFeedPassword
                  optional: false
            - name: OPENELIS_ATOMFEED_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}-secrets
                  key: openELISAtomFeedUser
                  optional: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # volumeMounts:
          #   - mountPath: /usr/local/tomcat/.OpenMRS/modules
          #     name: openmrs-data
          #   - mountPath: /home/bahmni/patient_images
          #     name: openmrs-patient-images
          #   - mountPath: /home/bahmni/document_images
          #     name: openmrs-document-images
      restartPolicy: Always
      # volumes:
      #   - name: openmrs-data
      #     persistentVolumeClaim:
      #       claimName: openmrs-data-pvc
      #   - name: openmrs-patient-images
      #     persistentVolumeClaim:
      #       claimName: openmrs-patient-images-pvc
      #   - name: openmrs-document-images
      #     persistentVolumeClaim:
      #       claimName: openmrs-document-images-pvc


